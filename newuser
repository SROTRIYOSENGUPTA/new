public static void main(String[] args) {
    try {
        // Replace 'your_search_id' with the actual search ID you want to use.
        int searchId = your_search_id;

        // Create an instance of SQLSearchStatement or access its methods statically if applicable.
        SQLSearchStatement searchStatement = new SQLSearchStatement();

        // Replace 'conn' with the appropriate database connection.
        // You should establish the connection elsewhere in your application.
        Connection conn = YourDatabaseConnectionManager.getConnection(); // Example method to get a connection.

        // Call your search-related methods here, passing the 'conn' and 'searchId' as parameters.
        // For example:
        // String sql = searchStatement.buildSearchSQL(conn, searchId, /* other parameters */);

        // Remember to handle exceptions properly.

        // Close the database connection when you're done, typically in a separate method.
        YourDatabaseConnectionManager.closeConnection(conn);
    } catch (Exception e) {
        e.printStackTrace();
    }
}

public static String main(String[] args) {
    // Existing code in your main method

    // Capture the search result as a string
    String searchResult = /* Logic to generate the search result as a string */;

    return searchResult;
}

import org.junit.Test;

import static org.junit.Assert.assertEquals;

public class SQLSearchStatementTest {

    @Test
    public void testMainMethodSearchResult() {
        // Call the main method and capture the search result
        String capturedResult = SQLSearchStatement.main(/*pass any arguments if needed*/);

        // Define your expected search result as a string
        String expectedSearchResult = "Expected search result goes here...";

        // Assert that the captured result matches the expected result
        assertEquals(expectedSearchResult, capturedResult);
    }
}

import org.junit.Before;
import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class SQLSearchStatementTest {
    private OutputCapturer outputCapturer;

    @Before
    public void setUp() {
        outputCapturer = new OutputCapturer();
    }

    @Test
    public void testMainMethodOutput() {
        outputCapturer.startCapture();

        // Call the main method to execute your code
        SQLSearchStatement.main(/*pass any arguments if needed*/);

        String capturedOutput = outputCapturer.getCapturedOutput();
        outputCapturer.stopCapture();

        // Define your expected output
        String expectedOutput = "Expected output goes here...";

        // Assert that the captured output matches the expected output
        assertEquals(expectedOutput, capturedOutput);
    }
}

