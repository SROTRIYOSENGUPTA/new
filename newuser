public class newuser {
    private String username;
    private String password;

    public User(String username, String password) {
        this.username = username;
        this.password = password;
    }

    public String getUsername() {
        return username;
    }

    public String getPassword() {
        return password;
    }
}

Connection to H2 database successful.
org.h2.jdbc.JdbcSQLException: Table "USERS" not found; SQL statement:

import java.io.BufferedReader;
import java.io.FileReader;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;

public class UserDataWriteH2 {
    private static final String DATABASE_URL = "jdbc:h2:~/test";
    private static final String DATABASE_USER = "sa";
    private static final String DATABASE_PASSWORD = "";

    public static void main(String[] args) {
        // Create the table if it doesn't exist
        createTable();

        // Now you can proceed with inserting user data into the 'USERS' table
        // Prompt user for input (username and password) and create the User object...
    }

    private static void createTable() {
        try (Connection connection = DriverManager.getConnection(DATABASE_URL, DATABASE_USER, DATABASE_PASSWORD)) {
            String createTableScript = readFile("create_table.sql");

            try (Statement statement = connection.createStatement()) {
                statement.execute(createTableScript);
            }

            System.out.println("Table 'USERS' created successfully.");
        } catch (SQLException e) {
            System.err.println("Table creation failed: " + e.getMessage());
        }
    }

    private static String readFile(String filename) {
        StringBuilder content = new StringBuilder();
        try (BufferedReader reader = new BufferedReader(new FileReader(filename))) {
            String line;
            while ((line = reader.readLine()) != null) {
                content.append(line).append("\n");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return content.toString();
    }
}

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Scanner;

public class UserDataReadH2 {
    private static final String DATABASE_URL = "jdbc:h2:~/test";
    private static final String DATABASE_USER = "sa";
    private static final String DATABASE_PASSWORD = "";

    public static void main(String[] args) {
        try (Connection connection = DriverManager.getConnection(DATABASE_URL, DATABASE_USER, DATABASE_PASSWORD)) {
            System.out.println("Connection to H2 database successful.");
        } catch (SQLException e) {
            System.err.println("Connection failed: " + e.getMessage());
        }

        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter username to search: ");
        String searchUsername = scanner.nextLine();
        scanner.close();

        // Search for the user based on the username input by the user
        User foundUser = searchForUser(searchUsername);

        // Display the result
        if (foundUser != null) {
            System.out.println("User found: " + foundUser.getName());
            System.out.println("Password for username '" + searchUsername + "' is: " + foundUser.getPassword());
        } else {
            System.out.println("Username not found.");
        }
    }

    private static User searchForUser(String searchUsername) {
        try (Connection connection = DriverManager.getConnection(DATABASE_URL, DATABASE_USER, DATABASE_PASSWORD)) {
            String selectQuery = "SELECT name, password FROM users WHERE username = ?";

            try (PreparedStatement statement = connection.prepareStatement(selectQuery)) {
                statement.setString(1, searchUsername);

                try (ResultSet resultSet = statement.executeQuery()) {
                    if (resultSet.next()) {
                        String name = resultSet.getString("name");
                        String password = resultSet.getString("password");
                        return new User(name, searchUsername, password);
                    }
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return null; // Username not found
    }
}
java.io.FileNotFoundException: create_table.sql (The system cannot find the file specified)
	at java.base/java.io.FileInputStream.open0(Native Method)
	at java.base/java.io.FileInputStream.open(FileInputStream.java:219)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:112)
	at java.base/java.io.FileReader.<init>(FileReader.java:60)
	at userdatawriteeeh2.readFile(userdatawriteeeh2.java:39)
	at userdatawriteeeh2.createTable(userdatawriteeeh2.java:25)
	at userdatawriteeeh2.main(userdatawriteeeh2.java:17)
Table 'USERS' created successfully.

cd C:\Users\YourUsername\ProjectFolder
cd: C:\Users\SSengupta\eclipse-workspace

javac UserDataWriteH2.java User.java UserDataReadH2.java

java UserDataWriteH2

java UserDataReadH2

Exception in thread "main" java.lang.Error: Unresolved compilation problem: 
	Duplicate local variable selectQuery

	at UserDataReadH2.searchForPassword(UserDataReadH2.java:63)
	at UserDataReadH2.main(UserDataReadH2.java:43)

private static String searchForPassword(String searchUsername) {
    try (Connection connection = DriverManager.getConnection(DATABASE_URL, DATABASE_USER, DATABASE_PASSWORD)) {
        String selectQuery = "SELECT password FROM users WHERE username = ?";

        try (PreparedStatement statement = connection.prepareStatement(selectQuery)) {
            statement.setString(1, searchUsername);

            try (ResultSet resultSet = statement.executeQuery()) {
                if (resultSet.next()) {
                    return resultSet.getString("password");
                }
            }
        }
    } catch (SQLException e) {
        e.printStackTrace();
    }
    return null; // Username not found
}

Connection failed: No suitable driver found for jdbc:sqlite:my_database.db

Connection to SQLite database successful.
Enter username to search: user1
org.sqlite.SQLiteException: [SQLITE_ERROR] SQL error or missing database (no such table: users)
Username not found.
	at org.xerial.sqlitejdbc@3.42.0.0/org.sqlite.core.DB.newSQLException(DB.java:1179)
	at org.xerial.sqlitejdbc@3.42.0.0/org.sqlite.core.DB.newSQLException(DB.java:1190)
	at org.xerial.sqlitejdbc@3.42.0.0/org.sqlite.core.DB.throwex(DB.java:1150)
	at org.xerial.sqlitejdbc@3.42.0.0/org.sqlite.core.NativeDB.prepare_utf8(Native Method)
	at org.xerial.sqlitejdbc@3.42.0.0/org.sqlite.core.NativeDB.prepare(NativeDB.java:126)
	at org.xerial.sqlitejdbc@3.42.0.0/org.sqlite.core.DB.prepare(DB.java:264)
	at org.xerial.sqlitejdbc@3.42.0.0/org.sqlite.core.CorePreparedStatement.<init>(CorePreparedStatement.java:46)
	at org.xerial.sqlitejdbc@3.42.0.0/org.sqlite.jdbc3.JDBC3PreparedStatement.<init>(JDBC3PreparedStatement.java:32)
	at org.xerial.sqlitejdbc@3.42.0.0/org.sqlite.jdbc4.JDBC4PreparedStatement.<init>(JDBC4PreparedStatement.java:25)
	at org.xerial.sqlitejdbc@3.42.0.0/org.sqlite.jdbc4.JDBC4Connection.prepareStatement(JDBC4Connection.java:34)
	at org.xerial.sqlitejdbc@3.42.0.0/org.sqlite.jdbc3.JDBC3Connection.prepareStatement(JDBC3Connection.java:226)
	at org.xerial.sqlitejdbc@3.42.0.0/org.sqlite.jdbc3.JDBC3Connection.prepareStatement(JDBC3Connection.java:206)
	at userdatareadlite.searchForPassword(userdatareadlite.java:54)
	at userdatareadlite.main(userdatareadlite.java:34)

////////////////////////

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Scanner;

public class userdatareadlite {
    private static final String DATABASE_URL = "jdbc:sqlite:my_database.db"; // SQLite connection URL
    // No need for separate username and password for SQLite, as it doesn't use authentication like H2

    public static void main(String[] args) {

        try (Connection connection = DriverManager.getConnection(DATABASE_URL)) {

            System.out.println("Connection to SQLite database successful.");

        } catch (SQLException e) {

            System.err.println("Connection failed: " + e.getMessage());

        }

        Scanner scanner = new Scanner(System.in);

        System.out.print("Enter username to search: ");

        String searchUsername = scanner.nextLine();

        scanner.close();

        // Search for the password based on the username input by the user
        String foundPassword = searchForPassword(searchUsername);

        // Display the result
        if (foundPassword != null) {

            System.out.println("Password for username '" + searchUsername + "' is: " + foundPassword);

        } else {

            System.out.println("Username not found.");

        }
    }

    private static String searchForPassword(String searchUsername) {

        try (Connection connection = DriverManager.getConnection(DATABASE_URL)) {

            String selectQuery = "SELECT password FROM t1 WHERE username = ?";

            try (PreparedStatement statement = connection.prepareStatement(selectQuery)) {

                statement.setString(1, searchUsername);


                try (ResultSet resultSet = statement.executeQuery()) {
                    if (resultSet.next()) {
                        return resultSet.getString("password");
                    }
                }
            }
        } catch (SQLException e) {

            e.printStackTrace();
        }
        return null; // this will return this if the username is not found
    }
}






